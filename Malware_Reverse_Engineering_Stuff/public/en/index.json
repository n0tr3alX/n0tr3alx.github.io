[{"categories":null,"content":"Overview Cobalt Strike is a commercial red team and adversary simulation tool. It is widely used by security professionals to assess the security of networks and systems by simulating advanced persistent threats (APTs). As everything, due to its powerful capabilities, it has also been misused by cybercriminals and threat actors. ","date":"2025-03-03","objectID":"/en/cobalt_strike_shellcode_and_config_extraction/:0:1","tags":null,"title":"Cobalt Strike shellcode and config extraction","uri":"/en/cobalt_strike_shellcode_and_config_extraction/"},{"categories":null,"content":"Analysis No suspicious entropy Only two imports Virtual alloc import Bp VirtualAlloc After stop at the break point use the option exec till return in rax we can see the memory location that is being allocated Fallowing in dump the address and it is empty for now….. Lets monitor any content that will be written to this address using a hardware access breaking point in the firts byte of the dump After resuming the execution we can see in dump 1 the first change in the allocated memory, ![Pasted_image_20250303174846.png] In the instructions we can see that we are in a loop (For the shellcode by written in memory), lets add a break point where the jge points to dump 1 we can see that now we have a lot of stuff writen in the allocked space righ clicking in the content of the dump we can use the disassembly function and see that the content became valid assembly instructions To extract the shellcode Righ clicking again in the content of the dump and use “Follow in Memory Map” AND…..The ip dont respond to any connections anymore so no more stages = no connfig extraction for this sample, but lets analysis a stageless cobalt strike artifcat, intead of using a shellcode to download and execute the next stage this sample execute has the beacon and execute in memory in another thread The process is the same, so just extract the binary after bein allocated in memory lets dump to a file After that lets use the tool https://github.com/Sentinel-One/CobaltStrikeParser created by sentinel One team to extract the configs! ","date":"2025-03-03","objectID":"/en/cobalt_strike_shellcode_and_config_extraction/:0:2","tags":null,"title":"Cobalt Strike shellcode and config extraction","uri":"/en/cobalt_strike_shellcode_and_config_extraction/"},{"categories":null,"content":"Just Some test This is bold text, and this is emphasized text. Visit the Hugo website! LEGENDA\r","date":"2025-01-20","objectID":"/en/first_post/:1:0","tags":null,"title":"First_post","uri":"/en/first_post/"}]